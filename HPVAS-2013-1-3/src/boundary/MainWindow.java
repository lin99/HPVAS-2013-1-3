/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package boundary;

import Model.Owner;
import Model.Pet;
import Model.Veterinarian;
import java.awt.Color;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.GroupLayout;
import javax.swing.JPanel;
import Controller.*;

/**
 *
 * @author Lina Fernanda Rosales Castro
 * <href="mailto:lfrosalesc@unal.edu.co">lfrosalesc@unal.edu.co</href>
 * @author Andrés Sarmiento Tobón
 * <href="mailto:ansarmientoto@unal.edu.co">ansarmientoto@unal.edu.co</href>
 */
public class MainWindow extends javax.swing.JFrame {

    private AddGeneral addGeneral;
    private ResultOwner resultOwner;
    private ResultPet resultPet;
    private ResultVet resultVet;
    private JPanel currentPanel;
    private ResultGeneral resultGeneral;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        addGeneral = new AddGeneral(this);
        resultOwner = new ResultOwner(this);
        resultPet = new ResultPet(this);
        resultVet = new ResultVet(this);
        resultGeneral = new ResultGeneral(this);
        setLocationRelativeTo(null);
        System.out.println("Location: " + checkBoxOwner.getLocation());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelMain = new javax.swing.JPanel();
        panelSearch = new javax.swing.JPanel();
        textFieldQuery = new javax.swing.JTextField();
        checkBoxOwner = new javax.swing.JCheckBox();
        checkBoxVet = new javax.swing.JCheckBox();
        checkBoxPet = new javax.swing.JCheckBox();
        buttonSearch = new javax.swing.JButton();
        buttonAddQuery = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        panelResults = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(253, 253, 253));

        PanelMain.setBackground(new java.awt.Color(253, 253, 253));

        panelSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu Light", 0, 18))); // NOI18N
        panelSearch.setOpaque(false);

        textFieldQuery.setForeground(java.awt.Color.lightGray);
        textFieldQuery.setText("Search here... ");
        textFieldQuery.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textFieldQueryFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                textFieldQueryFocusLost(evt);
            }
        });

        checkBoxOwner.setBackground(new java.awt.Color(255, 255, 255));
        checkBoxOwner.setText("Owner");
        checkBoxOwner.setOpaque(false);
        checkBoxOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxOwnerActionPerformed(evt);
            }
        });

        checkBoxVet.setBackground(new java.awt.Color(255, 255, 255));
        checkBoxVet.setText("Vet");
        checkBoxVet.setOpaque(false);

        checkBoxPet.setBackground(new java.awt.Color(255, 255, 255));
        checkBoxPet.setText("Pet");
        checkBoxPet.setEnabled(false);
        checkBoxPet.setOpaque(false);

        buttonSearch.setBackground(new java.awt.Color(255, 255, 255));
        buttonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boundary/search.png"))); // NOI18N
        buttonSearch.setText("Search");
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        buttonAddQuery.setBackground(new java.awt.Color(255, 255, 255));
        buttonAddQuery.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boundary/addSearch.png"))); // NOI18N
        buttonAddQuery.setText("Add");
        buttonAddQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddQueryActionPerformed(evt);
            }
        });

        buttonSave.setBackground(new java.awt.Color(255, 255, 255));
        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/boundary/save.png"))); // NOI18N
        buttonSave.setText("Save Now");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSearchLayout = new javax.swing.GroupLayout(panelSearch);
        panelSearch.setLayout(panelSearchLayout);
        panelSearchLayout.setHorizontalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchLayout.createSequentialGroup()
                        .addComponent(textFieldQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addComponent(checkBoxOwner)
                        .addGap(27, 27, 27)
                        .addComponent(checkBoxVet)
                        .addGap(31, 31, 31)
                        .addComponent(checkBoxPet)
                        .addGap(34, 34, 34)))
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonAddQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSave)
                .addGap(20, 20, 20))
        );
        panelSearchLayout.setVerticalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonAddQuery))
                        .addGap(18, 18, 18)
                        .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkBoxOwner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkBoxVet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkBoxPet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(buttonSave)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelResults.setMaximumSize(new java.awt.Dimension(598, 335));
        panelResults.setMinimumSize(new java.awt.Dimension(598, 335));
        panelResults.setOpaque(false);

        javax.swing.GroupLayout panelResultsLayout = new javax.swing.GroupLayout(panelResults);
        panelResults.setLayout(panelResultsLayout);
        panelResultsLayout.setHorizontalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
        );
        panelResultsLayout.setVerticalGroup(
            panelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 335, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout PanelMainLayout = new javax.swing.GroupLayout(PanelMain);
        PanelMain.setLayout(PanelMainLayout);
        PanelMainLayout.setHorizontalGroup(
            PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        PanelMainLayout.setVerticalGroup(
            PanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        checkBoxOwner.setVisible(false);
        checkBoxPet.setVisible(false);
        checkBoxVet.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkBoxOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxOwnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBoxOwnerActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        String search = textFieldQuery.getText();

        if (search.trim().intern() == "*") {
            Owner[] owners = new Owner[0];
            
            if (checkBoxOwner.isSelected()) {
                owners = new Owner[0];//Call the controller to get all the Owners
            }

            Pet[] pets = new Pet[0];
            
            if (checkBoxPet.isSelected()) {
                pets = new Pet[0];//Call the controller to get all the Pets
            }

            Veterinarian[] vets = new Veterinarian[0];
            
            if (checkBoxVet.isSelected()) {
                vets = new Veterinarian[0];//Call the controller to get all the Vets
            }

            resultGeneral.setResults(pets, vets, owners);
            resultGeneral.update();
            setEmbeddedPanel(resultGeneral);
        } else {
            search(search);
        }
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void buttonAddQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddQueryActionPerformed
        boolean wellFormed = Controller.ControllerFormatting.validateSSN(
                textFieldQuery.getText());
        
        if(wellFormed) {
            checkBoxPet.setEnabled(false);
            checkBoxPet.setSelected(false);
        } else {
            checkBoxPet.setEnabled(true);
        }
        
        checkBoxOwner.setVisible(true);
        checkBoxPet.setVisible(true);
        checkBoxVet.setVisible(true);
    }//GEN-LAST:event_buttonAddQueryActionPerformed

    private void textFieldQueryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldQueryFocusGained
        if(textFieldQuery.getText().intern() == "Search here... ") {
            textFieldQuery.setText("");
            textFieldQuery.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_textFieldQueryFocusGained

    private void textFieldQueryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textFieldQueryFocusLost
        if(textFieldQuery.getText().intern() == "") {
            textFieldQuery.setText("Search here... ");
            textFieldQuery.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_textFieldQueryFocusLost

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        ((EmbeddedHPVAPanel) currentPanel).save();
        ((EmbeddedHPVAPanel) currentPanel).update();
    }//GEN-LAST:event_buttonSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    private Queue<JPanel> previousPanels = new LinkedList<JPanel>();

    public void loadPreviousPanel() {
        JPanel panel = previousPanels.poll();
        
        if (panel != null) {
            GroupLayout panelResultsLayout = (GroupLayout) panelResults
                    .getLayout();
            panelResultsLayout.setHorizontalGroup(
                    panelResultsLayout.createParallelGroup(
                    GroupLayout.Alignment.LEADING)
                    .addComponent(panel, GroupLayout.DEFAULT_SIZE,
                    GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
            panelResultsLayout.setVerticalGroup(
                    panelResultsLayout.createParallelGroup(
                    GroupLayout.Alignment.LEADING)
                    .addComponent(panel, GroupLayout.DEFAULT_SIZE,
                    GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
            
            panel.repaint();
        }
    }

    private void search(String search) {
        Pet[] pets = ControllerSearch.searchPetsByName(search).toArray(
                new Pet[0]);
        Owner[] owners = ControllerSearch.searchOwnerByNames(search).toArray(
                new Owner[0]);
        Veterinarian[] vets = ControllerSearch.searchVeterinarianByNames(search)
                .toArray(new Veterinarian[0]);
        resultGeneral.setResults(pets, vets, owners);
        resultGeneral.update();
        setEmbeddedPanel(resultGeneral);
    }

    private void setEmbeddedPanel(JPanel panel) {
        if (panel != currentPanel) {
            GroupLayout panelResultsLayout = (GroupLayout) panelResults
                    .getLayout();
            panelResultsLayout.setHorizontalGroup(
                    panelResultsLayout.createParallelGroup(
                    GroupLayout.Alignment.LEADING)
                    .addComponent(panel, GroupLayout.DEFAULT_SIZE,
                    GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
            panelResultsLayout.setVerticalGroup(
                    panelResultsLayout.createParallelGroup(
                    GroupLayout.Alignment.LEADING)
                    .addComponent(panel, GroupLayout.DEFAULT_SIZE,
                    GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
            
            panel.repaint();
            
            previousPanels.add(currentPanel);
            currentPanel = panel;
            ((EmbeddedHPVAPanel) currentPanel).update();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelMain;
    private javax.swing.JButton buttonAddQuery;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JCheckBox checkBoxOwner;
    private javax.swing.JCheckBox checkBoxPet;
    private javax.swing.JCheckBox checkBoxVet;
    private javax.swing.JPanel panelResults;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JTextField textFieldQuery;
    // End of variables declaration//GEN-END:variables
}
